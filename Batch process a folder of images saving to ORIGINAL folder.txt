// Macro code for batch processing a folder
// of .tif files, includes saving .tifs back into the 
// ORIGINAL folder with a modified version 
// of the original image name

        dir = getDirectory("Choose a Directory ");      // prompts the user to select the folder to be processed, stores the folder as the destination for saving
     list = getFileList(dir);                                             // gives ImageJ a list of all files in the folder to work through
   print(list.length);                                                      // optional prints the number of files in the folder


// Note that the above processes are outside the loop brackets {  }, so they will only be called once at the beginning of the macro


 setBatchMode(true);               // runs up to 6 times faster, without showing images onscreen.  Turn off during troubleshooting steps??
    for (f=0; f<list.length; f++) {	// main files loop (process every image until you get to the bottom of the list), { means open a loop
        path = dir+list[f];                       // creates the filepath for saving
 print(path);                                      // optional prints the filepath name to a log window
        showProgress(f, list.length);     // optional progress monitor
        if (!endsWith(path,"/")) open(path);  // open the filepath
if (nImages>=1) {                                          // stop when there are no more images in the folder
  if (endsWith(path,"f")) {		// Processes only tif files.   Useful if there are log or metadata files in the folder  

   start = getTime();                             //optional get start time to see how long a process will take.  Goes with last line print time


   t=getTitle();                                        // gets the name of the image being processed                                     
   s=lastIndexOf(t, '.');                          // next three lines are code to strip off the .tif extension from the filename
   t=substring(t, 0,s);
   t=replace(t," ","_");
 
  t2= t +' B16.tif';                                  // adds a modifier to the original name.  Replace B16 with whatever you want.  
                                                             // If you want a space, include it after the open single quotes as we did here.

run("16-bit");                                          // this is the only line of code in this macro.  Replace this line with all of your macro code for analysis.  
                                                               // You can have as many lines as you need to do all your image processing

   rename(t2);                                        // renames the top image to the new, modified image name
   saveAs("tif", path);                           // Saves the top image as a tif, to the ORIGINAL folder
   run("Close");                                  // closes whichever window is on top without saving. 
                                                              // You may need to add additional close commands to close all your windows

       }                                 // Closes a loop.  Note there are as many } as there are { in the code, and each } is on it's own line
  }
}                                                      

 print((getTime()-start)/1000);      // optional, goes with getTime.  Prints the amount of time taken for processing to the log file
